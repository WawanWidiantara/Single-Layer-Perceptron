{
    "cells": [
     {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {},
      "outputs": [],
      "source": [
       "import pandas as pd\n",
       "import numpy as np\n",
       "\n",
       "from sklearn.preprocessing import LabelEncoder, MinMaxScaler"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/html": [
          "<div>\n",
          "<style scoped>\n",
          "    .dataframe tbody tr th:only-of-type {\n",
          "        vertical-align: middle;\n",
          "    }\n",
          "\n",
          "    .dataframe tbody tr th {\n",
          "        vertical-align: top;\n",
          "    }\n",
          "\n",
          "    .dataframe thead th {\n",
          "        text-align: right;\n",
          "    }\n",
          "</style>\n",
          "<table border=\"1\" class=\"dataframe\">\n",
          "  <thead>\n",
          "    <tr style=\"text-align: right;\">\n",
          "      <th></th>\n",
          "      <th>0</th>\n",
          "      <th>1</th>\n",
          "      <th>2</th>\n",
          "      <th>3</th>\n",
          "      <th>4</th>\n",
          "      <th>5</th>\n",
          "      <th>6</th>\n",
          "      <th>7</th>\n",
          "      <th>8</th>\n",
          "      <th>9</th>\n",
          "      <th>10</th>\n",
          "      <th>11</th>\n",
          "      <th>12</th>\n",
          "    </tr>\n",
          "  </thead>\n",
          "  <tbody>\n",
          "    <tr>\n",
          "      <th>0</th>\n",
          "      <td>PassengerId</td>\n",
          "      <td>Survived</td>\n",
          "      <td>Pclass</td>\n",
          "      <td>Name</td>\n",
          "      <td>Sex</td>\n",
          "      <td>Age</td>\n",
          "      <td>SibSp</td>\n",
          "      <td>Parch</td>\n",
          "      <td>Ticket</td>\n",
          "      <td>Fare</td>\n",
          "      <td>Cabin</td>\n",
          "      <td>Embarked</td>\n",
          "      <td>NaN</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>1</th>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>3</td>\n",
          "      <td>Braund</td>\n",
          "      <td>Mr. Owen Harris</td>\n",
          "      <td>male</td>\n",
          "      <td>22</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>A/5 21171</td>\n",
          "      <td>7.25</td>\n",
          "      <td>NaN</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>2</th>\n",
          "      <td>2</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>Cumings</td>\n",
          "      <td>Mrs. John Bradley (Florence Briggs Thayer)</td>\n",
          "      <td>female</td>\n",
          "      <td>38</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>PC 17599</td>\n",
          "      <td>712.833</td>\n",
          "      <td>C85</td>\n",
          "      <td>C</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>3</th>\n",
          "      <td>3</td>\n",
          "      <td>1</td>\n",
          "      <td>3</td>\n",
          "      <td>Heikkinen</td>\n",
          "      <td>Miss. Laina</td>\n",
          "      <td>female</td>\n",
          "      <td>26</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>STON/O2. 3101282</td>\n",
          "      <td>7.925</td>\n",
          "      <td>NaN</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>4</th>\n",
          "      <td>4</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>Futrelle</td>\n",
          "      <td>Mrs. Jacques Heath (Lily May Peel)</td>\n",
          "      <td>female</td>\n",
          "      <td>35</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>113803</td>\n",
          "      <td>53.1</td>\n",
          "      <td>C123</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "  </tbody>\n",
          "</table>\n",
          "</div>"
         ],
         "text/plain": [
          "            0         1       2          3    \n",
          "0  PassengerId  Survived  Pclass       Name  \\\n",
          "1            1         0       3     Braund   \n",
          "2            2         1       1    Cumings   \n",
          "3            3         1       3  Heikkinen   \n",
          "4            4         1       1   Futrelle   \n",
          "\n",
          "                                            4       5      6      7       8    \n",
          "0                                          Sex     Age  SibSp  Parch  Ticket  \\\n",
          "1                              Mr. Owen Harris    male     22      1       0   \n",
          "2   Mrs. John Bradley (Florence Briggs Thayer)  female     38      1       0   \n",
          "3                                  Miss. Laina  female     26      0       0   \n",
          "4           Mrs. Jacques Heath (Lily May Peel)  female     35      1       0   \n",
          "\n",
          "                 9        10        11   12  \n",
          "0              Fare    Cabin  Embarked  NaN  \n",
          "1         A/5 21171     7.25       NaN    S  \n",
          "2          PC 17599  712.833       C85    C  \n",
          "3  STON/O2. 3101282    7.925       NaN    S  \n",
          "4            113803     53.1      C123    S  "
         ]
        },
        "execution_count": 2,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "df = pd.read_csv(\"D:/Code/py_code/Artificial-Neural-Network/Single-Layer-Perceptron/data/train_data_cl.csv\", header=None, names=list(range(13)))\n",
       "df.head()"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "# Data Preprocessing"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Benerin column"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/html": [
          "<div>\n",
          "<style scoped>\n",
          "    .dataframe tbody tr th:only-of-type {\n",
          "        vertical-align: middle;\n",
          "    }\n",
          "\n",
          "    .dataframe tbody tr th {\n",
          "        vertical-align: top;\n",
          "    }\n",
          "\n",
          "    .dataframe thead th {\n",
          "        text-align: right;\n",
          "    }\n",
          "</style>\n",
          "<table border=\"1\" class=\"dataframe\">\n",
          "  <thead>\n",
          "    <tr style=\"text-align: right;\">\n",
          "      <th></th>\n",
          "      <th>PassengerId</th>\n",
          "      <th>Survived</th>\n",
          "      <th>Pclass</th>\n",
          "      <th>Name</th>\n",
          "      <th>FirstName</th>\n",
          "      <th>Sex</th>\n",
          "      <th>Age</th>\n",
          "      <th>SibSp</th>\n",
          "      <th>Parch</th>\n",
          "      <th>Ticket</th>\n",
          "      <th>Fare</th>\n",
          "      <th>Cabin</th>\n",
          "      <th>Embarked</th>\n",
          "    </tr>\n",
          "  </thead>\n",
          "  <tbody>\n",
          "    <tr>\n",
          "      <th>0</th>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>3</td>\n",
          "      <td>Braund</td>\n",
          "      <td>Mr. Owen Harris</td>\n",
          "      <td>male</td>\n",
          "      <td>22</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>A/5 21171</td>\n",
          "      <td>7.25</td>\n",
          "      <td>NaN</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>1</th>\n",
          "      <td>2</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>Cumings</td>\n",
          "      <td>Mrs. John Bradley (Florence Briggs Thayer)</td>\n",
          "      <td>female</td>\n",
          "      <td>38</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>PC 17599</td>\n",
          "      <td>712.833</td>\n",
          "      <td>C85</td>\n",
          "      <td>C</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>2</th>\n",
          "      <td>3</td>\n",
          "      <td>1</td>\n",
          "      <td>3</td>\n",
          "      <td>Heikkinen</td>\n",
          "      <td>Miss. Laina</td>\n",
          "      <td>female</td>\n",
          "      <td>26</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>STON/O2. 3101282</td>\n",
          "      <td>7.925</td>\n",
          "      <td>NaN</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>3</th>\n",
          "      <td>4</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>Futrelle</td>\n",
          "      <td>Mrs. Jacques Heath (Lily May Peel)</td>\n",
          "      <td>female</td>\n",
          "      <td>35</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>113803</td>\n",
          "      <td>53.1</td>\n",
          "      <td>C123</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>4</th>\n",
          "      <td>5</td>\n",
          "      <td>0</td>\n",
          "      <td>3</td>\n",
          "      <td>Allen</td>\n",
          "      <td>Mr. William Henry</td>\n",
          "      <td>male</td>\n",
          "      <td>35</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>373450</td>\n",
          "      <td>8.05</td>\n",
          "      <td>NaN</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "  </tbody>\n",
          "</table>\n",
          "</div>"
         ],
         "text/plain": [
          "  PassengerId Survived Pclass       Name   \n",
          "0           1        0      3     Braund  \\\n",
          "1           2        1      1    Cumings   \n",
          "2           3        1      3  Heikkinen   \n",
          "3           4        1      1   Futrelle   \n",
          "4           5        0      3      Allen   \n",
          "\n",
          "                                     FirstName     Sex Age SibSp Parch   \n",
          "0                              Mr. Owen Harris    male  22     1     0  \\\n",
          "1   Mrs. John Bradley (Florence Briggs Thayer)  female  38     1     0   \n",
          "2                                  Miss. Laina  female  26     0     0   \n",
          "3           Mrs. Jacques Heath (Lily May Peel)  female  35     1     0   \n",
          "4                            Mr. William Henry    male  35     0     0   \n",
          "\n",
          "             Ticket     Fare Cabin Embarked  \n",
          "0         A/5 21171     7.25   NaN        S  \n",
          "1          PC 17599  712.833   C85        C  \n",
          "2  STON/O2. 3101282    7.925   NaN        S  \n",
          "3            113803     53.1  C123        S  \n",
          "4            373450     8.05   NaN        S  "
         ]
        },
        "execution_count": 3,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "col_name = df.iloc[0,:12].values\n",
       "col_name = np.insert(col_name, 4, \"FirstName\")\n",
       "\n",
       "df.columns = col_name\n",
       "df = df.drop(0).reset_index(drop=True)\n",
       "\n",
       "df.head()"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Merge Name dan FirstName"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/html": [
          "<div>\n",
          "<style scoped>\n",
          "    .dataframe tbody tr th:only-of-type {\n",
          "        vertical-align: middle;\n",
          "    }\n",
          "\n",
          "    .dataframe tbody tr th {\n",
          "        vertical-align: top;\n",
          "    }\n",
          "\n",
          "    .dataframe thead th {\n",
          "        text-align: right;\n",
          "    }\n",
          "</style>\n",
          "<table border=\"1\" class=\"dataframe\">\n",
          "  <thead>\n",
          "    <tr style=\"text-align: right;\">\n",
          "      <th></th>\n",
          "      <th>PassengerId</th>\n",
          "      <th>Survived</th>\n",
          "      <th>Pclass</th>\n",
          "      <th>Name</th>\n",
          "      <th>Sex</th>\n",
          "      <th>Age</th>\n",
          "      <th>SibSp</th>\n",
          "      <th>Parch</th>\n",
          "      <th>Ticket</th>\n",
          "      <th>Fare</th>\n",
          "      <th>Cabin</th>\n",
          "      <th>Embarked</th>\n",
          "    </tr>\n",
          "  </thead>\n",
          "  <tbody>\n",
          "    <tr>\n",
          "      <th>0</th>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>3</td>\n",
          "      <td>Mr. Owen Harris Braund</td>\n",
          "      <td>male</td>\n",
          "      <td>22</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>A/5 21171</td>\n",
          "      <td>7.25</td>\n",
          "      <td>NaN</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>1</th>\n",
          "      <td>2</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>Mrs. John Bradley (Florence Briggs Thayer) Cu...</td>\n",
          "      <td>female</td>\n",
          "      <td>38</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>PC 17599</td>\n",
          "      <td>712.833</td>\n",
          "      <td>C85</td>\n",
          "      <td>C</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>2</th>\n",
          "      <td>3</td>\n",
          "      <td>1</td>\n",
          "      <td>3</td>\n",
          "      <td>Miss. Laina Heikkinen</td>\n",
          "      <td>female</td>\n",
          "      <td>26</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>STON/O2. 3101282</td>\n",
          "      <td>7.925</td>\n",
          "      <td>NaN</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>3</th>\n",
          "      <td>4</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>Mrs. Jacques Heath (Lily May Peel) Futrelle</td>\n",
          "      <td>female</td>\n",
          "      <td>35</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>113803</td>\n",
          "      <td>53.1</td>\n",
          "      <td>C123</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>4</th>\n",
          "      <td>5</td>\n",
          "      <td>0</td>\n",
          "      <td>3</td>\n",
          "      <td>Mr. William Henry Allen</td>\n",
          "      <td>male</td>\n",
          "      <td>35</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>373450</td>\n",
          "      <td>8.05</td>\n",
          "      <td>NaN</td>\n",
          "      <td>S</td>\n",
          "    </tr>\n",
          "  </tbody>\n",
          "</table>\n",
          "</div>"
         ],
         "text/plain": [
          "  PassengerId Survived Pclass   \n",
          "0           1        0      3  \\\n",
          "1           2        1      1   \n",
          "2           3        1      3   \n",
          "3           4        1      1   \n",
          "4           5        0      3   \n",
          "\n",
          "                                                Name     Sex Age SibSp Parch   \n",
          "0                             Mr. Owen Harris Braund    male  22     1     0  \\\n",
          "1   Mrs. John Bradley (Florence Briggs Thayer) Cu...  female  38     1     0   \n",
          "2                              Miss. Laina Heikkinen  female  26     0     0   \n",
          "3        Mrs. Jacques Heath (Lily May Peel) Futrelle  female  35     1     0   \n",
          "4                            Mr. William Henry Allen    male  35     0     0   \n",
          "\n",
          "             Ticket     Fare Cabin Embarked  \n",
          "0         A/5 21171     7.25   NaN        S  \n",
          "1          PC 17599  712.833   C85        C  \n",
          "2  STON/O2. 3101282    7.925   NaN        S  \n",
          "3            113803     53.1  C123        S  \n",
          "4            373450     8.05   NaN        S  "
         ]
        },
        "execution_count": 4,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "df[\"Name\"] = df[\"FirstName\"] + \" \" + df[\"Name\"]\n",
       "df = df.drop(\"FirstName\", axis=1)\n",
       "df.head()"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Perbaikan data yang tidak sesuai"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "**Perbaikan Data Sex**\n",
       "\n",
       "terdapat data dengan value yang bukan 'male' atau 'female'"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {},
      "outputs": [
       {
        "name": "stdout",
        "output_type": "stream",
        "text": [
         "['male', 'female', '15', '27', '9', '36.5', '16', '40', '45', '24', '18', '20.5', '8', '26', '3', '1', '19', '21', '36', '22', '48', '49', '35', '39', '6']\n",
         "['male', 'female']\n"
        ]
       }
      ],
      "source": [
       "print(df['Sex'].unique().tolist())\n",
       "true_sex_val = ['male', 'female']\n",
       "count = 0\n",
       "for val in df[\"Sex\"].values:\n",
       "    if val not in true_sex_val:\n",
       "        df.loc[count, 'Sex'] = np.random.choice(true_sex_val)\n",
       "    count += 1\n",
       "print(df['Sex'].unique().tolist())"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "**Perbaikan Data Fare**\n",
       "\n",
       "terdapat data dengan value yang bukan float"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {},
      "outputs": [],
      "source": [
       "count = 0\n",
       "for val in df['Fare'].values:\n",
       "    try:\n",
       "        float(val)\n",
       "    except ValueError:\n",
       "        df.loc[count, 'Fare'] = 0\n",
       "    count += 1"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "**Perbaikan Data Parch**\n",
       "\n",
       "terdapat data dengan value yang bukan int"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {},
      "outputs": [],
      "source": [
       "count = 0\n",
       "for val in df['Parch'].values:\n",
       "    if len(val) > 1:\n",
       "        df.loc[count, 'Parch'] = 0\n",
       "    count += 1"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Change Data Type"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {},
      "outputs": [
       {
        "name": "stdout",
        "output_type": "stream",
        "text": [
         "<class 'pandas.core.frame.DataFrame'>\n",
         "RangeIndex: 712 entries, 0 to 711\n",
         "Data columns (total 12 columns):\n",
         " #   Column       Non-Null Count  Dtype \n",
         "---  ------       --------------  ----- \n",
         " 0   PassengerId  712 non-null    object\n",
         " 1   Survived     712 non-null    object\n",
         " 2   Pclass       712 non-null    object\n",
         " 3   Name         712 non-null    object\n",
         " 4   Sex          712 non-null    object\n",
         " 5   Age          712 non-null    object\n",
         " 6   SibSp        712 non-null    object\n",
         " 7   Parch        712 non-null    object\n",
         " 8   Ticket       712 non-null    object\n",
         " 9   Fare         685 non-null    object\n",
         " 10  Cabin        210 non-null    object\n",
         " 11  Embarked     677 non-null    object\n",
         "dtypes: object(12)\n",
         "memory usage: 66.9+ KB\n"
        ]
       }
      ],
      "source": [
       "df.info()"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {},
      "outputs": [
       {
        "name": "stdout",
        "output_type": "stream",
        "text": [
         "<class 'pandas.core.frame.DataFrame'>\n",
         "RangeIndex: 712 entries, 0 to 711\n",
         "Data columns (total 12 columns):\n",
         " #   Column       Non-Null Count  Dtype  \n",
         "---  ------       --------------  -----  \n",
         " 0   PassengerId  712 non-null    int64  \n",
         " 1   Survived     712 non-null    int64  \n",
         " 2   Pclass       712 non-null    int64  \n",
         " 3   Name         712 non-null    string \n",
         " 4   Sex          712 non-null    string \n",
         " 5   Age          712 non-null    float64\n",
         " 6   SibSp        712 non-null    int64  \n",
         " 7   Parch        712 non-null    int64  \n",
         " 8   Ticket       712 non-null    string \n",
         " 9   Fare         685 non-null    float64\n",
         " 10  Cabin        210 non-null    string \n",
         " 11  Embarked     677 non-null    string \n",
         "dtypes: float64(2), int64(5), string(5)\n",
         "memory usage: 66.9 KB\n"
        ]
       }
      ],
      "source": [
       "df = df.astype({'PassengerId': 'int64', 'Survived': 'int64', 'Pclass': 'int64', 'SibSp': 'int64', 'Parch': 'int64'})\n",
       "df = df.astype({'Name': 'string', 'Sex': 'string', 'Ticket': 'string', 'Cabin': 'string', 'Embarked': 'string'})\n",
       "df = df.astype({'Age': 'float64', 'Fare': 'float64'})\n",
       "df.info()"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Menghilangkan Column yang tidak dipakai"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {},
      "outputs": [],
      "source": [
       "del df['Name']\n",
       "del df['Ticket']\n",
       "del df['Cabin']"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Cek & Replace Missing Value"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/html": [
          "<div>\n",
          "<style scoped>\n",
          "    .dataframe tbody tr th:only-of-type {\n",
          "        vertical-align: middle;\n",
          "    }\n",
          "\n",
          "    .dataframe tbody tr th {\n",
          "        vertical-align: top;\n",
          "    }\n",
          "\n",
          "    .dataframe thead th {\n",
          "        text-align: right;\n",
          "    }\n",
          "</style>\n",
          "<table border=\"1\" class=\"dataframe\">\n",
          "  <thead>\n",
          "    <tr style=\"text-align: right;\">\n",
          "      <th></th>\n",
          "      <th>total</th>\n",
          "      <th>percent</th>\n",
          "    </tr>\n",
          "  </thead>\n",
          "  <tbody>\n",
          "    <tr>\n",
          "      <th>PassengerId</th>\n",
          "      <td>0</td>\n",
          "      <td>0.000000</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>Survived</th>\n",
          "      <td>0</td>\n",
          "      <td>0.000000</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>Pclass</th>\n",
          "      <td>0</td>\n",
          "      <td>0.000000</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>Sex</th>\n",
          "      <td>0</td>\n",
          "      <td>0.000000</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>Age</th>\n",
          "      <td>0</td>\n",
          "      <td>0.000000</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>SibSp</th>\n",
          "      <td>0</td>\n",
          "      <td>0.000000</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>Parch</th>\n",
          "      <td>0</td>\n",
          "      <td>0.000000</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>Fare</th>\n",
          "      <td>27</td>\n",
          "      <td>3.792135</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>Embarked</th>\n",
          "      <td>35</td>\n",
          "      <td>4.915730</td>\n",
          "    </tr>\n",
          "  </tbody>\n",
          "</table>\n",
          "</div>"
         ],
         "text/plain": [
          "             total   percent\n",
          "PassengerId      0  0.000000\n",
          "Survived         0  0.000000\n",
          "Pclass           0  0.000000\n",
          "Sex              0  0.000000\n",
          "Age              0  0.000000\n",
          "SibSp            0  0.000000\n",
          "Parch            0  0.000000\n",
          "Fare            27  3.792135\n",
          "Embarked        35  4.915730"
         ]
        },
        "execution_count": 11,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "missing = pd.DataFrame({\n",
       "    'total' : df.isnull().sum(),\n",
       "    'percent' : df.isnull().sum()/df.shape[0] * 100})\n",
       "    \n",
       "missing"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {},
      "outputs": [],
      "source": [
       "df['Embarked'] = df['Embarked'].fillna(value=np.random.choice(df['Embarked'].unique().tolist()))\n",
       "df['Fare'] = df['Fare'].fillna(value=0)\n",
       "df.isna().sum()\n",
       "clean_data = df.copy()"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Encode"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/html": [
          "<div>\n",
          "<style scoped>\n",
          "    .dataframe tbody tr th:only-of-type {\n",
          "        vertical-align: middle;\n",
          "    }\n",
          "\n",
          "    .dataframe tbody tr th {\n",
          "        vertical-align: top;\n",
          "    }\n",
          "\n",
          "    .dataframe thead th {\n",
          "        text-align: right;\n",
          "    }\n",
          "</style>\n",
          "<table border=\"1\" class=\"dataframe\">\n",
          "  <thead>\n",
          "    <tr style=\"text-align: right;\">\n",
          "      <th></th>\n",
          "      <th>PassengerId</th>\n",
          "      <th>Survived</th>\n",
          "      <th>Pclass</th>\n",
          "      <th>Sex</th>\n",
          "      <th>Age</th>\n",
          "      <th>SibSp</th>\n",
          "      <th>Parch</th>\n",
          "      <th>Fare</th>\n",
          "      <th>Embarked</th>\n",
          "    </tr>\n",
          "  </thead>\n",
          "  <tbody>\n",
          "    <tr>\n",
          "      <th>0</th>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>3</td>\n",
          "      <td>1</td>\n",
          "      <td>22.0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>7.250</td>\n",
          "      <td>2</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>1</th>\n",
          "      <td>2</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>38.0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>712.833</td>\n",
          "      <td>0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>2</th>\n",
          "      <td>3</td>\n",
          "      <td>1</td>\n",
          "      <td>3</td>\n",
          "      <td>0</td>\n",
          "      <td>26.0</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>7.925</td>\n",
          "      <td>2</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>3</th>\n",
          "      <td>4</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>35.0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>53.100</td>\n",
          "      <td>2</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>4</th>\n",
          "      <td>5</td>\n",
          "      <td>0</td>\n",
          "      <td>3</td>\n",
          "      <td>1</td>\n",
          "      <td>35.0</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>8.050</td>\n",
          "      <td>2</td>\n",
          "    </tr>\n",
          "  </tbody>\n",
          "</table>\n",
          "</div>"
         ],
         "text/plain": [
          "   PassengerId  Survived  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked\n",
          "0            1         0       3    1  22.0      1      0    7.250         2\n",
          "1            2         1       1    0  38.0      1      0  712.833         0\n",
          "2            3         1       3    0  26.0      0      0    7.925         2\n",
          "3            4         1       1    0  35.0      1      0   53.100         2\n",
          "4            5         0       3    1  35.0      0      0    8.050         2"
         ]
        },
        "execution_count": 13,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "lbenc = LabelEncoder()\n",
       "\n",
       "for i in df.columns.values:\n",
       "    if df[i].dtypes == 'string':\n",
       "        df[i] = lbenc.fit_transform(df[i])\n",
       "\n",
       "df.head()"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Split Feature and Label"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/html": [
          "<div>\n",
          "<style scoped>\n",
          "    .dataframe tbody tr th:only-of-type {\n",
          "        vertical-align: middle;\n",
          "    }\n",
          "\n",
          "    .dataframe tbody tr th {\n",
          "        vertical-align: top;\n",
          "    }\n",
          "\n",
          "    .dataframe thead th {\n",
          "        text-align: right;\n",
          "    }\n",
          "</style>\n",
          "<table border=\"1\" class=\"dataframe\">\n",
          "  <thead>\n",
          "    <tr style=\"text-align: right;\">\n",
          "      <th></th>\n",
          "      <th>PassengerId</th>\n",
          "      <th>Survived</th>\n",
          "      <th>Pclass</th>\n",
          "      <th>Sex</th>\n",
          "      <th>Age</th>\n",
          "      <th>SibSp</th>\n",
          "      <th>Parch</th>\n",
          "      <th>Fare</th>\n",
          "      <th>Embarked</th>\n",
          "    </tr>\n",
          "  </thead>\n",
          "  <tbody>\n",
          "    <tr>\n",
          "      <th>0</th>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>3</td>\n",
          "      <td>1</td>\n",
          "      <td>22.0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>7.250</td>\n",
          "      <td>2</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>1</th>\n",
          "      <td>2</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>38.0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>712.833</td>\n",
          "      <td>0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>2</th>\n",
          "      <td>3</td>\n",
          "      <td>1</td>\n",
          "      <td>3</td>\n",
          "      <td>0</td>\n",
          "      <td>26.0</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>7.925</td>\n",
          "      <td>2</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>3</th>\n",
          "      <td>4</td>\n",
          "      <td>1</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>35.0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>53.100</td>\n",
          "      <td>2</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>4</th>\n",
          "      <td>5</td>\n",
          "      <td>0</td>\n",
          "      <td>3</td>\n",
          "      <td>1</td>\n",
          "      <td>35.0</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>8.050</td>\n",
          "      <td>2</td>\n",
          "    </tr>\n",
          "  </tbody>\n",
          "</table>\n",
          "</div>"
         ],
         "text/plain": [
          "   PassengerId  Survived  Pclass  Sex   Age  SibSp  Parch     Fare  Embarked\n",
          "0            1         0       3    1  22.0      1      0    7.250         2\n",
          "1            2         1       1    0  38.0      1      0  712.833         0\n",
          "2            3         1       3    0  26.0      0      0    7.925         2\n",
          "3            4         1       1    0  35.0      1      0   53.100         2\n",
          "4            5         0       3    1  35.0      0      0    8.050         2"
         ]
        },
        "execution_count": 14,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "train = df.copy()\n",
       "x_train = train.iloc[:, 2:].values\n",
       "y_train = df.iloc[:, 1].values\n",
       "train.head()"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Normalisasi"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/html": [
          "<div>\n",
          "<style scoped>\n",
          "    .dataframe tbody tr th:only-of-type {\n",
          "        vertical-align: middle;\n",
          "    }\n",
          "\n",
          "    .dataframe tbody tr th {\n",
          "        vertical-align: top;\n",
          "    }\n",
          "\n",
          "    .dataframe thead th {\n",
          "        text-align: right;\n",
          "    }\n",
          "</style>\n",
          "<table border=\"1\" class=\"dataframe\">\n",
          "  <thead>\n",
          "    <tr style=\"text-align: right;\">\n",
          "      <th></th>\n",
          "      <th>PassengerId</th>\n",
          "      <th>Pclass</th>\n",
          "      <th>Sex</th>\n",
          "      <th>Age</th>\n",
          "      <th>SibSp</th>\n",
          "      <th>Parch</th>\n",
          "      <th>Fare</th>\n",
          "      <th>Embarked</th>\n",
          "      <th>Survived</th>\n",
          "    </tr>\n",
          "  </thead>\n",
          "  <tbody>\n",
          "    <tr>\n",
          "      <th>0</th>\n",
          "      <td>1</td>\n",
          "      <td>1.0</td>\n",
          "      <td>1.0</td>\n",
          "      <td>0.2750</td>\n",
          "      <td>0.2</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.007960</td>\n",
          "      <td>1.0</td>\n",
          "      <td>0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>1</th>\n",
          "      <td>2</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.4750</td>\n",
          "      <td>0.2</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.782652</td>\n",
          "      <td>0.0</td>\n",
          "      <td>1</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>2</th>\n",
          "      <td>3</td>\n",
          "      <td>1.0</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.3250</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.008701</td>\n",
          "      <td>1.0</td>\n",
          "      <td>1</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>3</th>\n",
          "      <td>4</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.4375</td>\n",
          "      <td>0.2</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.058301</td>\n",
          "      <td>1.0</td>\n",
          "      <td>1</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>4</th>\n",
          "      <td>5</td>\n",
          "      <td>1.0</td>\n",
          "      <td>1.0</td>\n",
          "      <td>0.4375</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.0</td>\n",
          "      <td>0.008838</td>\n",
          "      <td>1.0</td>\n",
          "      <td>0</td>\n",
          "    </tr>\n",
          "  </tbody>\n",
          "</table>\n",
          "</div>"
         ],
         "text/plain": [
          "   PassengerId  Pclass  Sex     Age  SibSp  Parch      Fare  Embarked   \n",
          "0            1     1.0  1.0  0.2750    0.2    0.0  0.007960       1.0  \\\n",
          "1            2     0.0  0.0  0.4750    0.2    0.0  0.782652       0.0   \n",
          "2            3     1.0  0.0  0.3250    0.0    0.0  0.008701       1.0   \n",
          "3            4     0.0  0.0  0.4375    0.2    0.0  0.058301       1.0   \n",
          "4            5     1.0  1.0  0.4375    0.0    0.0  0.008838       1.0   \n",
          "\n",
          "   Survived  \n",
          "0         0  \n",
          "1         1  \n",
          "2         1  \n",
          "3         1  \n",
          "4         0  "
         ]
        },
        "execution_count": 15,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "feature = x_train.copy()\n",
       "label = y_train.copy()\n",
       "label = label.reshape(-1,1)\n",
       "passengerId = train.iloc[:, 0].values.reshape(-1,1)\n",
       "col = train.columns.values.tolist()\n",
       "col.pop(1)\n",
       "col.append(\"Survived\")\n",
       "\n",
       "mnmx = MinMaxScaler()\n",
       "feature = mnmx.fit_transform(feature)\n",
       "\n",
       "data = np.concatenate((passengerId, feature), axis=1)\n",
       "dataLabel = np.concatenate((data, label), axis=1)\n",
       "normalize_data = pd.DataFrame(dataLabel, columns=col)\n",
       "\n",
       "normalize_data = normalize_data.astype({'PassengerId': 'int64', 'Survived': 'int64'})\n",
       "normalize_data.head()"
      ]
     },
     {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
       "### Export hasil normalisasi ke excel"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {},
      "outputs": [],
      "source": [
       "with pd.ExcelWriter('Data Training.xlsx') as writer:\n",
       "    clean_data.to_excel(writer, sheet_name='Hasil Preprocessing')\n",
       "    df.to_excel(writer, sheet_name='Hasil Encode')\n",
       "    normalize_data.to_excel(writer, sheet_name='Normalisasi')"
      ]
     }
    ],
    "metadata": {
     "kernelspec": {
      "display_name": "pyenv",
      "language": "python",
      "name": "python3"
     },
     "language_info": {
      "codemirror_mode": {
       "name": "ipython",
       "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.3"
     }
    },
    "nbformat": 4,
    "nbformat_minor": 2
   }
   